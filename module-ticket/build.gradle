plugins {
    id 'com.google.protobuf' version '0.9.4'
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

ext {
    springCloudVersion = "2024.0.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

repositories {
    mavenCentral()
    // IamPort
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation("io.micrometer:micrometer-registry-prometheus")
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // IamPort
    implementation 'com.github.iamport:iamport-rest-client-java:0.1.6'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    testImplementation 'com.h2database:h2'  // H2 테스트 전용으로 변경

    // gRPC
    implementation 'io.grpc:grpc-netty-shaded:1.64.0'
    implementation 'io.grpc:grpc-protobuf:1.64.0'
    implementation 'io.grpc:grpc-stub:1.64.0'
    implementation 'com.google.protobuf:protobuf-java:3.25.3'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // RSocket
    implementation 'org.springframework.boot:spring-boot-starter-rsocket'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.64.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/java', 'build/generated/source/proto/main/grpc'
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
tasks.register("prepareKotlinBuildScriptModel"){}
